"use strict";(()=>{var e={};e.id=313,e.ids=[313],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7147:e=>{e.exports=require("fs")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},5477:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},7310:e=>{e.exports=require("url")},9796:e=>{e.exports=require("zlib")},182:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>h,originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>f,staticGenerationBailout:()=>j});var o={};t.r(o),t.d(o,{POST:()=>p});var a=t(5419),s=t(9108),n=t(9678),i=t(8070),u=t(9983);async function c(e){try{let r=(await t.e(546).then(t.t.bind(t,9546,23))).default,o=await e.arrayBuffer(),a=Buffer.from(o),s=await r(a);if(!s.text||0===s.text.trim().length)return`[No readable text found in ${e.name}]

This PDF may contain only images or scanned content that requires OCR processing.`;return s.text.trim()}catch(r){return console.error(`Error extracting text from ${e.name}:`,r),`[Error extracting text from ${e.name}]

Failed to process this PDF file. It may be corrupted or password-protected.`}}async function p(e,{params:r}){try{let t=(0,u.B)();if(!t)return i.Z.json({error:"Supabase not configured"},{status:500});let{data:{user:o},error:a}=await t.auth.getUser();if(a||!o)return i.Z.json({error:"Authentication required"},{status:401});let{projectId:s}=r,{data:n,error:p}=await t.from("projects").select("id, user_id").eq("id",s).eq("user_id",o.id).single();if(p||!n)return i.Z.json({error:"Project not found or access denied"},{status:404});let l=(await e.formData()).getAll("files");if(!l||0===l.length)return i.Z.json({error:"No files provided"},{status:400});let d=l.filter(e=>e instanceof File&&"application/pdf"===e.type&&e.size>0&&e.size<=10485760);if(0===d.length)return i.Z.json({error:"No valid PDF files found"},{status:400});if(d.length>20)return i.Z.json({error:"Maximum 20 files allowed"},{status:400});let f=[],m="";for(let e of d)try{let r=await c(e);m+=`

--- Document: ${e.name} ---
${r}`,f.push({project_id:s,filename:e.name,file_size:e.size,extracted_text:r,processed_at:new Date().toISOString()})}catch(r){console.error(`Error processing ${e.name}:`,r)}if(0===f.length)return i.Z.json({error:"Failed to process any files"},{status:500});let{error:h}=await t.from("project_documents").insert(f);if(h)return console.error("Error saving documents:",h),i.Z.json({error:"Failed to save documents"},{status:500});let{error:j}=await t.from("projects").update({extracted_text:m,document_count:f.length,status:"ready",updated_at:new Date().toISOString()}).eq("id",s);if(j)return console.error("Error updating project:",j),i.Z.json({error:"Failed to update project"},{status:500});return i.Z.json({success:!0,processedFiles:f.length,totalFiles:d.length})}catch(e){return console.error("Upload error:",e),i.Z.json({error:"Internal server error"},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/projects/[projectId]/upload/route",pathname:"/api/projects/[projectId]/upload",filename:"route",bundlePath:"app/api/projects/[projectId]/upload/route"},resolvedPagePath:"/Users/Aaron/Downloads/app chatgpt cari/app/api/projects/[projectId]/upload/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:d,staticGenerationAsyncStorage:f,serverHooks:m,headerHooks:h,staticGenerationBailout:j}=l,g="/api/projects/[projectId]/upload/route";function x(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:f})}},9983:(e,r,t)=>{t.d(r,{B:()=>n});var o=t(2409);let a=process.env.NEXT_PUBLIC_SUPABASE_URL,s=process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;function n(){return a&&s?(0,o.eI)(a,s):(console.warn("Missing NEXT_PUBLIC_SUPABASE_URL or NEXT_PUBLIC_SUPABASE_ANON_KEY environment variables"),null)}}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[638,206,409],()=>t(182));module.exports=o})();